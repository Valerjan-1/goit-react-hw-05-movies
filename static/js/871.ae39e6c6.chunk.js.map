{"version":3,"file":"static/js/871.ae39e6c6.chunk.js","mappings":"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","sources":["api.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '82e54d6346add158b3ca2c4553f01f90';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import { searchMovieByReviews } from '../../api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    searchMovieByReviews(moviesId)\n      .then(({ results }) => {\n        setReviews(results);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  return (\n    <>\n      {!!reviews.length ? (\n        <ul>\n          {reviews.map(({ content, author, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","searchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","searchMovieById","_ref3","_callee3","id","_context3","concat","_x2","searchMovieByCast","_ref4","_callee4","_context4","_x3","searchMovieByReviews","_ref5","_callee5","_context5","_x4","moviesId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","then","catch","message","console","log","_jsx","_Fragment","children","length","map","content","author","_jsxs"],"sourceRoot":""}